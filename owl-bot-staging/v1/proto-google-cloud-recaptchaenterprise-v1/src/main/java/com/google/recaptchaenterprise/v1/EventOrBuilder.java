// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/recaptchaenterprise/v1/recaptchaenterprise.proto

package com.google.recaptchaenterprise.v1;

public interface EventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.recaptchaenterprise.v1.Event)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Optional. The user response token provided by the reCAPTCHA client-side integration
   * on your site.
   * </pre>
   *
   * <code>string token = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The token.
   */
  java.lang.String getToken();
  /**
   * <pre>
   * Optional. The user response token provided by the reCAPTCHA client-side integration
   * on your site.
   * </pre>
   *
   * <code>string token = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The bytes for token.
   */
  com.google.protobuf.ByteString
      getTokenBytes();

  /**
   * <pre>
   * Optional. The site key that was used to invoke reCAPTCHA on your site and generate
   * the token.
   * </pre>
   *
   * <code>string site_key = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The siteKey.
   */
  java.lang.String getSiteKey();
  /**
   * <pre>
   * Optional. The site key that was used to invoke reCAPTCHA on your site and generate
   * the token.
   * </pre>
   *
   * <code>string site_key = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The bytes for siteKey.
   */
  com.google.protobuf.ByteString
      getSiteKeyBytes();

  /**
   * <pre>
   * Optional. The user agent present in the request from the user's device related to
   * this event.
   * </pre>
   *
   * <code>string user_agent = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The userAgent.
   */
  java.lang.String getUserAgent();
  /**
   * <pre>
   * Optional. The user agent present in the request from the user's device related to
   * this event.
   * </pre>
   *
   * <code>string user_agent = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The bytes for userAgent.
   */
  com.google.protobuf.ByteString
      getUserAgentBytes();

  /**
   * <pre>
   * Optional. The IP address in the request from the user's device related to this event.
   * </pre>
   *
   * <code>string user_ip_address = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The userIpAddress.
   */
  java.lang.String getUserIpAddress();
  /**
   * <pre>
   * Optional. The IP address in the request from the user's device related to this event.
   * </pre>
   *
   * <code>string user_ip_address = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The bytes for userIpAddress.
   */
  com.google.protobuf.ByteString
      getUserIpAddressBytes();

  /**
   * <pre>
   * Optional. The expected action for this type of event. This should be the same action
   * provided at token generation time on client-side platforms already
   * integrated with recaptcha enterprise.
   * </pre>
   *
   * <code>string expected_action = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The expectedAction.
   */
  java.lang.String getExpectedAction();
  /**
   * <pre>
   * Optional. The expected action for this type of event. This should be the same action
   * provided at token generation time on client-side platforms already
   * integrated with recaptcha enterprise.
   * </pre>
   *
   * <code>string expected_action = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
   * @return The bytes for expectedAction.
   */
  com.google.protobuf.ByteString
      getExpectedActionBytes();
}
